#!/usr/bin/env python3
# pylint: disable=missing-docstring

import sys
import os.path
import logging
from logging import error

MODDIR = os.path.dirname(__file__)
sys.path.insert(0, MODDIR)

from myaptlib import DEBIndex, URLError, HTTPError # pylint: disable=wrong-import-position


def print_score_table(score_board):
    """Take a list of (place, deb, score) tupples and print them out in columns"""
    maxdigits = len(str(score_board[-1][0]))
    max_deb_length = max([len(row[1]) for row in score_board])
    formatstring = '{{:{}}}. {{:{}}} {{}}'.format(maxdigits, max_deb_length)
    for place, deb, score in score_board:
        print(formatstring.format(place, deb, score))


def run():
    log_format = '%(message)s'
    logging.basicConfig(format=log_format)

    # TODO: argparse
    if len(sys.argv) != 2:
        error("Missing architecture. Please provide.")
        error("Usage: {} ARCH".format(sys.argv[0]))
        sys.exit(1)

    arch = sys.argv[1]

    try:
        debindex = DEBIndex(arch)
    except (URLError, HTTPError) as err:
        error("Couldn't fetch the index, aborting. Non-existent arch maybe? {}".format(err))
        sys.exit(1)
    except Exception as err: # pylint: disable=broad-except
        error("Something unusual happend, giving up: {}".format(err))
        sys.exit(1)

    top_debs = debindex.get_top_packages(10)
    print_score_table(top_debs)


if __name__ == '__main__':
    run()
